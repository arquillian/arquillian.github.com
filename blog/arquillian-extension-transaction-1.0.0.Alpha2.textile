---
tags: [ transaction ]
---

h3. JTA implementation

p. Time for extracting JTA transactions support from "Arquillian Persistence Extension":/modules/persistence-extension has come. It was in fact quite natural refactoring step. It opens possibilities to provide different transaction management to your (not only) persistence related tests. Many thanks to "Jakub Narloch":https://github.com/jmnarloch for bringing Transaction Extension to life as top level module and helping with this release!

p(info). %Forthcoming releases of "Arquillian Persistence Extension":/modules/persistence-extension will be shipped with JTA extension implementation as dependency, but the API will be adopted to the new package structure. Since the extension itself is based on SPI for transaction providers you will be able to change the implementation without a need to adopt your test code to whatever comes in the future releases.%

h3. Usage

p. Nothing have changed here. Just include it in your dependencies to be able to leverage JTA implementation within container of your choice.

div(filename). pom.xml

bc(prettify).. <dependency>
  <groupId>org.jboss.arquillian.extension</groupId>
  <artifactId>arquillian-transaction-jta</artifactId>
  <version>1.0.0.Alpha2</version>
</dependency>

h3. New SPI hook

p. New @TransactionEnabler@ interface has been introduced to the *SPI module*. It gives a possibility to alternate the strategy for enabling transactions. This is in particular handy for Persistence Extension where we follow conventions such as having @@UsingDataSet@ or @@ShouldMatchDataSet@ automatically wraps the test in transaction. For the reference you can have a look "new SPI interface":https://github.com/arquillian/arquillian-extension-transaction/blob/master/spi/src/main/java/org/jboss/arquillian/transaction/spi/provider/TransactionEnabler.java and tests.

That's pretty much it! We look forward to hearing your feedback about this release in the "community forums":#{site.project_space}!


---
date: 2014-08-06
author: jhuska
---

h3. Screenshooter

p. The major addition for Graphene toolset in 2.1.0.Alpha1 is a possibility to take screenshots while functional testing. Together with awesome "Arquillian Recorder":https://github.com/arquillian/arquillian-recorder extension, you end up with clean and informative reports full of screenshots of your tests.

p. Working with such reports decreases the chance that you will have to debug the test in order to fix it. From now on you will just peek on screenshot, wisely chosen test method name and failure message, all in one place, and you will know how to fix it!

p. There is a screenshot made just after the initial page is opened:

!(graphic pull-right)/images/blog/arquillian-graphene-2.1.0.Alpha1/screenshots/org.richfaces.tests.showcase.commandButton.TestSubmittingUserDetails/testSubmitCorrectData/before.png!

p. And there is a page when the test fails:

!(graphic pull-right)/images/blog/arquillian-graphene-2.1.0.Alpha1/screenshots/org.richfaces.tests.showcase.commandButton.TestSubmittingUserDetails/testSubmitCorrectData/before.png!

p. If you want to see the actual report, let's "open actual report":/images/blog/arquillian-graphene-2.1.0.Alpha1/arquillian_report.html from the test above.

p. There are no changes required in the code of the test itself:

bc(prettify)..@Test
@RunAsClient
public void testSubmitCorrectData() {
    detailsPage.fillInCorrectData();
    detailsPage.submitForm();
    waitAjax().until()
        .element(detailsPage.getSuccessfulySubmittedMessage)).is().visible();
}

h4. Basic usage

p. The basic configuration is described in "this README file.":https://github.com/arquillian/arquillian-graphene/blob/master/extension/screenshooter/README.adoc Please review it in order to learn how to incorporate this extension into your test suite.

p. Please bear in mind that this is only Alpha1 release, and that there is plenty of space for improvement. Indeed your ideas are very welcomed!

h3. Support for Page Objects written in Groovy

p. Thanks to Chris Jones addition, Graphene now supports Page Objects written in Groovy!

p. This nice improvement will be eventually merged back to 2.0.

h3. Interceptor precedence

p. In this release we also added _int getPrecedence_ method to Interceptor interface. Its the way how to achieve invoking the [Graphene interceptors](https://docs.jboss.org/author/display/ARQGRA2/Graphene+Interceptors) in a particular order.

p. The smaller the precedence is, the later is the interceptor is invoked. This allows to make the extensions work together as needed.

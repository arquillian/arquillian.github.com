---
date: 2018-02-27
---

p. <i class="icon-star"></i> **Extend expression language in arquillian configuration**

p. In @arquillian.xml@ file, properties are always set hardcoded or as system property @${myproperty}@ or as environment variable @${env.myenvironment}@. But in both cases values are set before test execution.

p. In current release, you can implement your own way of resolving values not just system properties or environment variables.

p. You need to register a new arquillian service in @ExtensionBuilder@ and it must conform following signature:

bc(prettify)..
interface PropertyResolver {
    String getValue(String key);
}

p. @key@ attribute is the expression set in @arquillian.xml@ file as property value and it returns the resolved value.

p. Currently apart from resolving properties from system properties and environment variables, we added a resolution of locations from classpath. For example:

bc(prettify).. <container qualifier="${arquillian.container:default}">
  <configuration>
    <property name="javaVmArguments">-Djavax.net.ssl.trustStore=${classpath(store.jks)}</property>
  </configuration>
</container>

p. I previous example, property @javax.net.ssl.trustStore@ is going to be set to absolute location of file @store.jks@ which is relative to root classpath.
